
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        flatDir {
            dirs("libs")
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}

plugins {
	id "com.matthewprenger.cursegradle" version "1.0.7"
}

apply plugin: 'net.minecraftforge.gradle'

version = modversion
group= "com.setycz.chickens"
archivesBaseName = "chickens"

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    // version = mcversion + "-" + forgeversion + forgeversion_suffix
    // runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20171003-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

	
	// replace '@VERSION@', project.version
	// replace '@FORGEVERSION@', forgeversion

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    mavenCentral()
    mavenLocal()
//    maven { url "http://tehnut.info/maven" }
    maven { url = "http://chickenbones.net/maven/" }
    maven { url "http://dvs1.progwml6.com/files/maven" }
//   	maven { // TOP
//		name 'tterrag maven'
//	    url "http://maven.tterrag.com/"
//	}
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
}

dependencies {

    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2858'

//    deobf "mezz.jei:jei_1.12.2:4.7.10.97"
//    deobf "mcjty.theoneprobe:TheOneProbe-1.12:${top_version}"
    // deobfCompile "mcp.mobius.waila:Hwyla:${HWYLA_version}_1.12"
//    deobf "cofh:RedstoneFlux:1.12-2.0.1.2:universal"
//    implementation "curse.maven:gregtech-ce-unofficial-1:1"
    // implementation 'com.google.code.gson:gson:2.13.1'

    implementation 'org.jetbrains:annotations:16.0.2'

    deobf fileTree(dir: 'libs', include: ['*.jar'])
    implementation(fileTree(dir: 'libs', include: ['*.jar']))
    compile(fileTree(dir: 'libs', include: ['*.jar']))
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", "1.12.2"

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion': "1.12.2"
    }
     
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title": "chickens",
                "Specification-Vendor": "chickens",
                "Specification-Version": "7.0", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"chickens",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
jar.finalizedBy('reobfJar')

curseforge {
	apiKey = project.hasProperty('curse_token') ? project.getProperty('curse_token') : ''
	project {
		id = project.hasProperty('curse_project_id') ? project.getProperty('curse_project_id') : ''
		changelog = file('changelog.txt')
		releaseType = project.releaseType
		addGameVersion '1.12.2'
		relations {
			optionalLibrary 'hwyla'
			optionalLibrary 'just-enough-items-jei'
		}
	}
}
